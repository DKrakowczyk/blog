# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddArticleInput {
  """Add article title"""
  title: String!

  """Add article description"""
  description: String

  """Add article body"""
  body: String!

  """Add is draft (true/false)"""
  isDraft: Boolean!

  """Add category"""
  categories: ObjectId!
}

input AddCategoryInput {
  """Category name"""
  name: String!

  """Category description"""
  description: String!
}

input AddCommentInput {
  """Comment body"""
  comment: String!

  """Comment author"""
  author: String!
}

input AddUserInput {
  userName: String!
  email: String!
  password: String!
  role: Role!
}

"""Article model"""
type Article {
  _id: ObjectId!

  """Article title"""
  title: String!

  """Article description"""
  description: String

  """Article body"""
  body: String!

  """Article author"""
  author: User!

  """Is draft (true/false)"""
  isDraft: Boolean!

  """Time to read"""
  timeToRead: Float!

  """Categories for current post"""
  categories: Category

  """Comments for current post"""
  comments: [Comment!]

  """Creation time"""
  created_at: DateTime!

  """Date of publishing"""
  published_at: DateTime
}

"""The Auth model"""
type Auth {
  """Access token"""
  token: String!

  """Refresh access token"""
  refreshToken: String!

  """Token expiration time"""
  tokenExpiration: Float!

  """Refresh token expiration time"""
  refreshExpiration: Float!
}

"""Category model"""
type Category {
  _id: ObjectId!

  """Category name"""
  name: String!

  """Category description"""
  description: String
}

"""Comment model"""
type Comment {
  _id: ObjectId!

  """Comment body"""
  comment: String!

  """Comment author"""
  author: User!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input EditCategoryInput {
  """Category id"""
  _id: ObjectId!

  """Category name"""
  name: String

  """Category description"""
  description: String
}

input EditUserInput {
  _id: ObjectId!
  userName: String
  role: Role!
}

type Mutation {
  createArticle(addArticle: AddArticleInput!): Article!
  publishArticle(articleId: ObjectId!): Article!
  deleteArticle(articleId: ObjectId!): Article!
  addCategory(input: AddCategoryInput!): Category!
  editCategory(input: EditCategoryInput!): Category!
  removeCategory(categoryId: ObjectId!): Category!
  addUser(user: AddUserInput!): User!
  editUser(user: EditUserInput!): User!
  deleteUser(userId: ObjectId!): User!
  signUp(signUp: AddUserInput!): User!
  signIn(signIn: SignInUserInput!): Auth!
  refreshToken(refreshToken: String!): Auth!
  addComment(articleId: ObjectId!, addComment: AddCommentInput!): Comment!
  removeComment(commentId: ObjectId!, articleId: ObjectId!): Comment!
}

"""Mongo object id scalar type"""
scalar ObjectId

type Query {
  getAllArticles: [Article!]!
  getSingleArticle(articleId: ObjectId!): Article!
  getAllCategories: [Category!]!
  getCategory(categoryId: ObjectId!): Category!
  findAllUsers: [User!]!
  getAllComments(articleId: ObjectId!): [Comment!]!
}

"""Available user roles"""
enum Role {
  Admin
  Maintainer
  StandardUser
}

input SignInUserInput {
  email: String!
  password: String!
}

type User {
  _id: ObjectId!
  userName: String!

  """User email"""
  email: String!

  """User password"""
  password: String

  """User role"""
  role: Role!
}
